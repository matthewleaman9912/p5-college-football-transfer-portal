{"ast":null,"code":"var _jsxFileName = \"/Users/matthewleaman/Development/code/phase-5/p5-college-football-transfer-portal/client/src/components/Team.js\";\nimport PlayerList from \"./PlayerList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Team({\n  city,\n  mascot,\n  wins,\n  theme,\n  rosters,\n  login,\n  user\n}) {\n  const limitTeam = rosters.map(roster => {\n    if (roster.coach.id === user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teamrosters\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year: \", roster.year, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Level of Competition: \", roster.level, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Coach Name: \", roster.coach.first_name, \" \", roster.coach.last_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Players: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n          players: roster.players\n        }, roster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)]\n      }, roster.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teamcontainer\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: login ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team Name: \", city, \" \", mascot, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team Wins: \", wins, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: rosters.map(roster => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teamrosters\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Year: \", roster.year, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Level of Competition: \", roster.level, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Coach Name: \", roster.coach.first_name, \" \", roster.coach.last_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Players: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n              players: roster.players\n            }, roster.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)]\n          }, roster.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this) : {\n        limitTeam\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = Team;\nexport default Team;\nvar _c;\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"names":["PlayerList","jsxDEV","_jsxDEV","Team","city","mascot","wins","theme","rosters","login","user","limitTeam","map","roster","coach","id","className","children","year","fileName","_jsxFileName","lineNumber","columnNumber","level","first_name","last_name","players","_c","$RefreshReg$"],"sources":["/Users/matthewleaman/Development/code/phase-5/p5-college-football-transfer-portal/client/src/components/Team.js"],"sourcesContent":["import PlayerList from \"./PlayerList\";\n\nfunction Team({ city, mascot, wins, theme, rosters, login, user }) {\n\n    const limitTeam = rosters.map((roster) => {\n        if (roster.coach.id === user){\n            return (\n                <div key={roster.id} className=\"teamrosters\">\n                    <p>Year: {roster.year} </p>\n                    <p>Level of Competition: {roster.level} </p>\n                    <p>Coach Name: {roster.coach.first_name} {roster.coach.last_name} </p>\n                    <p>Players: </p>\n                        <PlayerList\n                            key={roster.id}\n                            players={roster.players}\n                        />\n                </div>\n            )\n        }\n    })\n\n\n    return (\n        <div className=\"teamcontainer\">\n            <ul>\n                {login ? (\n                    <ul>\n                        <p>Team Name: {city} {mascot} </p>\n                        <p>Team Wins: {wins} </p>\n                        <ul>\n                            {rosters.map((roster) => (\n                                <div key={roster.id} className=\"teamrosters\">\n                                <p>Year: {roster.year} </p>\n                                <p>Level of Competition: {roster.level} </p>\n                                <p>Coach Name: {roster.coach.first_name} {roster.coach.last_name} </p>\n                                <p>Players: </p>\n                                    <PlayerList\n                                        key={roster.id}\n                                        players={roster.players}\n                                    />\n                                </div>\n                            ))}\n                        </ul>\n                    </ul>\n                ):(\n                    {limitTeam}\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Team;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}